name: Custom Pages Deploy

on:
  push:
    branches:
      - master
    paths:
      - 'docs/**'  # Only trigger when docs change

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
permissions:
  contents: read
  pages: write
  id-token: write


jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v3
        
      - name: Confirm docs folder presence
        run: |
          echo "Listing docs folder:"
          ls -la docs
    
      - name: Upload site
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs

      - name: Confirm artifact creation
        run: echo "Artifact github-pages should now be available for deploy"
  
      - name: Debug OIDC env and request
        env:
          ACTIONS_ID_TOKEN_REQUEST_URL: ${{ env.ACTIONS_ID_TOKEN_REQUEST_URL }}
          ACTIONS_ID_TOKEN: ${{ env.ACTIONS_ID_TOKEN }}
        run: |
          echo "ACTIONS_ID_TOKEN_REQUEST_URL: ${ACTIONS_ID_TOKEN_REQUEST_URL:+set}"
          echo "ACTIONS_ID_TOKEN: ${ACTIONS_ID_TOKEN:+set}"
          echo "Listing important envs (masked):"
          env | sed -n 's/^ACTIONS_ID_TOKEN_REQUEST_URL=/ACTIONS_ID_TOKEN_REQUEST_URL=set/p'
          env | sed -n 's/^ACTIONS_ID_TOKEN=/ACTIONS_ID_TOKEN=set/p'
          if [ -n "$ACTIONS_ID_TOKEN_REQUEST_URL" ]; then
            echo "Attempting to request token from ACTIONS_ID_TOKEN_REQUEST_URL"
            curl -sv --fail -H "Authorization: Bearer $ACTIONS_ID_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL" || true
          else
            echo "ACTIONS_ID_TOKEN_REQUEST_URL not set"
          fi
          
      - name: Proper OIDC token request debug
        env:
          ACTIONS_ID_TOKEN_REQUEST_URL: ${{ env.ACTIONS_ID_TOKEN_REQUEST_URL }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "ACTIONS_ID_TOKEN_REQUEST_URL: ${ACTIONS_ID_TOKEN_REQUEST_URL:+set}"
          if [ -z "$ACTIONS_ID_TOKEN_REQUEST_URL" ]; then
            echo "ACTIONS_ID_TOKEN_REQUEST_URL not set"
            exit 1
          fi
      
          echo "Requesting ID token from ACTIONS_ID_TOKEN_REQUEST_URL using GITHUB_TOKEN as bearer..."
          # Request the OIDC token from GitHub's endpoint using GITHUB_TOKEN as bearer auth
          response=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" -H "Accept: application/json" "$ACTIONS_ID_TOKEN_REQUEST_URL" || true)
          echo "Raw response (first 512 chars):"
          echo "${response:0:512}"
      
          # Attempt to extract token field (if present)
          id_token=$(echo "$response" | python3 -c "import sys, json; d=sys.stdin.read(); print(json.loads(d).get('value','')) if d.strip() else ''" 2>/dev/null || true)
          if [ -n "$id_token" ]; then
            echo "OIDC token received (length): ${#id_token}"
            # print first and last 8 chars masked for inspection
            echo "Token sample: ${id_token:0:8}...${id_token: -8}"
          else
            echo "No id token returned. Response above will show error details."
            exit 1
          fi

      - name: Request OIDC token
        run: |
          echo "Requesting OIDC token..."
          curl -s -H "Authorization: Bearer $ACTIONS_ID_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL"

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3
